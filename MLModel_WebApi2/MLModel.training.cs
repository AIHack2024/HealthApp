﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.FastTree;
using Microsoft.ML.Trainers;
using Microsoft.ML.Transforms;
using Microsoft.ML;

namespace MLModel_WebApi2
{
    public partial class MLModel
    {
        /// <summary>
        /// Retrains model using the pipeline generated as part of the training process. For more information on how to load data, see aka.ms/loaddata.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <param name="trainData"></param>
        /// <returns></returns>
        public static ITransformer RetrainPipeline(MLContext mlContext, IDataView trainData)
        {
            var pipeline = BuildPipeline(mlContext);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(new []{new InputOutputColumnPair(@"Gender", @"Gender"),new InputOutputColumnPair(@"FamilyHistory", @"FamilyHistory"),new InputOutputColumnPair(@"PreviousDiagnosis", @"PreviousDiagnosis")}, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      
                                    .Append(mlContext.Transforms.ReplaceMissingValues(@"Age", @"Age"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@"Symptoms",outputColumnName:@"Symptoms"))      
                                    .Append(mlContext.Transforms.Text.FeaturizeText(inputColumnName:@"LaboratoryTests",outputColumnName:@"LaboratoryTests"))      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"Gender",@"FamilyHistory",@"PreviousDiagnosis",@"Age",@"Symptoms",@"LaboratoryTests"}))      
                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@"AutoimmuneDisease",inputColumnName:@"AutoimmuneDisease"))      
                                    .Append(mlContext.MulticlassClassification.Trainers.OneVersusAll(binaryEstimator:mlContext.BinaryClassification.Trainers.FastTree(new FastTreeBinaryTrainer.Options(){NumberOfLeaves=4,MinimumExampleCountPerLeaf=30,NumberOfTrees=4,MaximumBinCountPerFeature=370,FeatureFraction=0.99999999,LearningRate=0.0292005739478444,LabelColumnName=@"AutoimmuneDisease",FeatureColumnName=@"Features"}),labelColumnName: @"AutoimmuneDisease"))      
                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@"PredictedLabel",inputColumnName:@"PredictedLabel"));

            return pipeline;
        }
    }
}
