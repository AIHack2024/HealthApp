// This file was auto-generated by ML.NET Model Builder. 
using Microsoft.ML;
using Microsoft.ML.Data;
using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
namespace HealthApp
{
    public partial class MLModel
    {
        /// <summary>
        /// model input class for MLModel.
        /// </summary>
        #region model input class
        public class ModelInput
        {
            [ColumnName(@"gender")]
            public string Gender { get; set; }

            [ColumnName(@"age")]
            public float Age { get; set; }

            [ColumnName(@"symptoms")]
            public string Symptoms { get; set; }

            [ColumnName(@"systemicManifestations")]
            public bool SystemicManifestations { get; set; }

            [ColumnName(@"finalDiagnosis")]
            public string FinalDiagnosis { get; set; }

            [ColumnName(@"ANA")]
            public string ANA { get; set; }

            [ColumnName(@"Anti-dsDNA")]
            public string Anti_dsDNA { get; set; }

            [ColumnName(@"RF")]
            public string RF { get; set; }

            [ColumnName(@"CRP")]
            public string CRP { get; set; }

            [ColumnName(@"WBC")]
            public string WBC { get; set; }

            [ColumnName(@"RBC")]
            public string RBC { get; set; }

            [ColumnName(@"Hemoglobin")]
            public string Hemoglobin { get; set; }

            [ColumnName(@"Platelets")]
            public string Platelets { get; set; }

            [ColumnName(@"ESR")]
            public string ESR { get; set; }

            [ColumnName(@"FVC")]
            public string FVC { get; set; }

            [ColumnName(@"FEV1")]
            public string FEV1 { get; set; }

            [ColumnName(@"FEV1/FVC Ratio")]
            public string FEV1_FVC_Ratio { get; set; }

            [ColumnName(@"Creatinine")]
            public string Creatinine { get; set; }

            [ColumnName(@"GFR")]
            public string GFR { get; set; }

            [ColumnName(@"C-Peptide")]
            public string C_Peptide { get; set; }

            [ColumnName(@"Autoantibodies")]
            public string Autoantibodies { get; set; }

            [ColumnName(@"Fasting Glucose")]
            public string Fasting_Glucose { get; set; }

            [ColumnName(@"HbA1c")]
            public string HbA1c { get; set; }

            [ColumnName(@"Anti-CCP")]
            public string Anti_CCP { get; set; }

            [ColumnName(@"Blood Type")]
            public string Blood_Type { get; set; }

            [ColumnName(@"Blood Pressure")]
            public string Blood_Pressure { get; set; }

            [ColumnName(@"Heart Rate")]
            public float Heart_Rate { get; set; }

            [ColumnName(@"Respiratory Rate")]
            public float Respiratory_Rate { get; set; }

            [ColumnName(@"Body Temperature")]
            public float Body_Temperature { get; set; }

            [ColumnName(@"Oxygen Saturation")]
            public string Oxygen_Saturation { get; set; }

            [ColumnName(@"Cholesterol")]
            public float Cholesterol { get; set; }

            [ColumnName(@"ALT")]
            public float ALT { get; set; }

            [ColumnName(@"AST")]
            public float AST { get; set; }

            [ColumnName(@"Current Medications")]
            public string Current_Medications { get; set; }

            [ColumnName(@"X-ray Findings")]
            public string X_ray_Findings { get; set; }

            [ColumnName(@"MRI Findings")]
            public string MRI_Findings { get; set; }

            [ColumnName(@"Echocardiogram Results")]
            public string Echocardiogram_Results { get; set; }

        }

        #endregion

        /// <summary>
        /// model output class for MLModel.
        /// </summary>
        #region model output class
        public class ModelOutput
        {
            [ColumnName(@"gender")]
            public float[] Gender { get; set; }

            [ColumnName(@"age")]
            public float Age { get; set; }

            [ColumnName(@"symptoms")]
            public float[] Symptoms { get; set; }

            [ColumnName(@"systemicManifestations")]
            public float[] SystemicManifestations { get; set; }

            [ColumnName(@"finalDiagnosis")]
            public uint FinalDiagnosis { get; set; }

            [ColumnName(@"ANA")]
            public float[] ANA { get; set; }

            [ColumnName(@"Anti-dsDNA")]
            public float[] Anti_dsDNA { get; set; }

            [ColumnName(@"RF")]
            public float[] RF { get; set; }

            [ColumnName(@"CRP")]
            public float[] CRP { get; set; }

            [ColumnName(@"WBC")]
            public float[] WBC { get; set; }

            [ColumnName(@"RBC")]
            public float[] RBC { get; set; }

            [ColumnName(@"Hemoglobin")]
            public float[] Hemoglobin { get; set; }

            [ColumnName(@"Platelets")]
            public float[] Platelets { get; set; }

            [ColumnName(@"ESR")]
            public float[] ESR { get; set; }

            [ColumnName(@"FVC")]
            public float[] FVC { get; set; }

            [ColumnName(@"FEV1")]
            public float[] FEV1 { get; set; }

            [ColumnName(@"FEV1/FVC Ratio")]
            public float[] FEV1_FVC_Ratio { get; set; }

            [ColumnName(@"Creatinine")]
            public float[] Creatinine { get; set; }

            [ColumnName(@"GFR")]
            public float[] GFR { get; set; }

            [ColumnName(@"C-Peptide")]
            public float[] C_Peptide { get; set; }

            [ColumnName(@"Autoantibodies")]
            public float[] Autoantibodies { get; set; }

            [ColumnName(@"Fasting Glucose")]
            public float[] Fasting_Glucose { get; set; }

            [ColumnName(@"HbA1c")]
            public float[] HbA1c { get; set; }

            [ColumnName(@"Anti-CCP")]
            public float[] Anti_CCP { get; set; }

            [ColumnName(@"Blood Type")]
            public float[] Blood_Type { get; set; }

            [ColumnName(@"Blood Pressure")]
            public float[] Blood_Pressure { get; set; }

            [ColumnName(@"Heart Rate")]
            public float Heart_Rate { get; set; }

            [ColumnName(@"Respiratory Rate")]
            public float Respiratory_Rate { get; set; }

            [ColumnName(@"Body Temperature")]
            public float Body_Temperature { get; set; }

            [ColumnName(@"Oxygen Saturation")]
            public float[] Oxygen_Saturation { get; set; }

            [ColumnName(@"Cholesterol")]
            public float Cholesterol { get; set; }

            [ColumnName(@"ALT")]
            public float ALT { get; set; }

            [ColumnName(@"AST")]
            public float AST { get; set; }

            [ColumnName(@"Current Medications")]
            public float[] Current_Medications { get; set; }

            [ColumnName(@"X-ray Findings")]
            public float[] X_ray_Findings { get; set; }

            [ColumnName(@"MRI Findings")]
            public float[] MRI_Findings { get; set; }

            [ColumnName(@"Echocardiogram Results")]
            public float[] Echocardiogram_Results { get; set; }

            [ColumnName(@"Features")]
            public float[] Features { get; set; }

            [ColumnName(@"PredictedLabel")]
            public string PredictedLabel { get; set; }

            [ColumnName(@"Score")]
            public float[] Score { get; set; }

        }

        #endregion

        private static string MLNetModelPath = Path.GetFullPath("MLModel.zip");

        public static readonly Lazy<PredictionEngine<ModelInput, ModelOutput>> PredictEngine = new Lazy<PredictionEngine<ModelInput, ModelOutput>>(() => CreatePredictEngine(), true);

        /// <summary>
        /// Use this method to predict on <see cref="ModelInput"/>.
        /// </summary>
        /// <param name="input">model input.</param>
        /// <returns><seealso cref=" ModelOutput"/></returns>
        public static ModelOutput Predict(ModelInput input)
        {
            var predEngine = PredictEngine.Value;
            return predEngine.Predict(input);
        }

        private static PredictionEngine<ModelInput, ModelOutput> CreatePredictEngine()
        {
            var mlContext = new MLContext();
            ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);
            return mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);
        }
    }
}
